#Use case description:
#1.create cluster
#2.cycle query status
#3.check computer node write and read
#4.check shard active and standby (to be add)
#5.delete cluster

--connection default
--let $node_mgr_1 = query_get_value(select hostaddr from server_nodes where machine_type = "computer",hostaddr,1)
--let $node_mgr_2 = query_get_value(select hostaddr from server_nodes where machine_type = "computer",hostaddr,2)
--let $node_mgr_3 = query_get_value(select hostaddr from server_nodes where machine_type = "computer",hostaddr,3)
--echo $node_mgr_1,$node_mgr_2,$node_mgr_3
--let $storage_iplists="$node_mgr_1","$node_mgr_2","$node_mgr_3"


--http_connect(cluster_mgr_http1, cluster_mgr,50000)

--http
request_type: POST
header:Content-Type:application/json
body:{
        "version":"1.0",
        "job_id":"",
        "job_type":"create_cluster",
        "user_name":"kunlun_test",
        "timestamp":"202205131532",
        "paras":{
              "nick_name":"rbrcluster002",
              "ha_mode":"rbr",
              "shards":"1",
              "nodes":"3",
              "comps":"1",
              "max_storage_size":"1",
              "max_connections":"6",
              "cpu_cores":"3",
              "cpu_limit_mode":"quota",
              "innodb_size":"2048",
              "dbcfg":"0",
              "fullsync_level": "1",
              "install_proxysql":"0",
              "storage_iplists": [
                   ${storage_iplists}
                          ],
              "computer_iplists": [
                   ${storage_iplists}
                           ]
  }           
}
EOF

--let $job_id = `http_reap(job_id)`
--sleep 60
--source kunlun-test/include/wait_http_request_finish.inc
--echo "create cluster"
#check shard active and standby
--kl_cluster_id(1)
--source kunlun-test/include/check_shard_state.inc
--sleep 10
#check cn
#--pg_connect(testrbr1,computer.1, abc, abc)
#--source kunlun-test/include/check_cn_write_read.inc


