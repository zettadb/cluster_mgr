#Use case description:
#1.create cluster
#2.cycle query status
#3.check computer node write and read
#4.check shard active and standby (to be add)
#5.delete cluster
--connection default
--let $src_cluster_id = `select id from db_clusters  where status = "inuse" limit 0,1;`
--let $dst_cluster_id = `select id from db_clusters  where status = "inuse" limit 1,1;`
--let $comp_host1 = `select hostaddr from comp_nodes where status = "active"  and db_cluster_id = $src_cluster_id limit 0,1;`
--let $comp_port1 = `select port from comp_nodes where status = "active"  and db_cluster_id = $src_cluster_id limit 0,1;`
--let $comp_host2 = `select hostaddr from comp_nodes where status = "active"  and db_cluster_id = $dst_cluster_id limit 0,1;`
--let $comp_port2 = `select port from comp_nodes where status = "active"  and db_cluster_id = $dst_cluster_id limit 0,1;`


--http_connect(cluster_mgr_http1, cluster_mgr,500000)

--http
request_type: POST
header:Content-Type:application/json
body:{
        "version":"1.0",
        "job_id":"",
        "job_type":"manualsw_rcr",
        "user_name":"kunlun_test",
        "timestamp":"202205131532",
        "paras":{
              "master_info":{
              "meta_db":"192.168.0.134:59301",
              "cluster_id":"${src_cluster_id}"
            },
              "cluster_id":"${dst_cluster_id}",
              "allow_sw_delay":"15"
  }           
}
EOF

--let $job_id = `http_reap(job_id)`
--sleep 10
--source kunlun-test/include/wait_http_request_finish.inc
--sleep 10
--echo "done"


--exec_in_background python2 kunlun-test/t/smokeTest.py --host $comp_host1  --port $comp_port1
--exec_in_background python2 kunlun-test/t/smokeTest.py --host $comp_host2  --port $comp_port2

--connection default
select * from cluster_rcr_infos ;
select * from cluster_rcr_meta_sync ;
