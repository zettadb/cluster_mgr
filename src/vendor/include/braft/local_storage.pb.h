// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: braft/local_storage.proto

#ifndef PROTOBUF_braft_2flocal_5fstorage_2eproto__INCLUDED
#define PROTOBUF_braft_2flocal_5fstorage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "braft/raft.pb.h"
#include "braft/local_file_meta.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_braft_2flocal_5fstorage_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsConfigurationPBMetaImpl();
void InitDefaultsConfigurationPBMeta();
void InitDefaultsLogPBMetaImpl();
void InitDefaultsLogPBMeta();
void InitDefaultsStablePBMetaImpl();
void InitDefaultsStablePBMeta();
void InitDefaultsLocalSnapshotPbMeta_FileImpl();
void InitDefaultsLocalSnapshotPbMeta_File();
void InitDefaultsLocalSnapshotPbMetaImpl();
void InitDefaultsLocalSnapshotPbMeta();
inline void InitDefaults() {
  InitDefaultsConfigurationPBMeta();
  InitDefaultsLogPBMeta();
  InitDefaultsStablePBMeta();
  InitDefaultsLocalSnapshotPbMeta_File();
  InitDefaultsLocalSnapshotPbMeta();
}
}  // namespace protobuf_braft_2flocal_5fstorage_2eproto
namespace braft {
class ConfigurationPBMeta;
class ConfigurationPBMetaDefaultTypeInternal;
extern ConfigurationPBMetaDefaultTypeInternal _ConfigurationPBMeta_default_instance_;
class LocalSnapshotPbMeta;
class LocalSnapshotPbMetaDefaultTypeInternal;
extern LocalSnapshotPbMetaDefaultTypeInternal _LocalSnapshotPbMeta_default_instance_;
class LocalSnapshotPbMeta_File;
class LocalSnapshotPbMeta_FileDefaultTypeInternal;
extern LocalSnapshotPbMeta_FileDefaultTypeInternal _LocalSnapshotPbMeta_File_default_instance_;
class LogPBMeta;
class LogPBMetaDefaultTypeInternal;
extern LogPBMetaDefaultTypeInternal _LogPBMeta_default_instance_;
class StablePBMeta;
class StablePBMetaDefaultTypeInternal;
extern StablePBMetaDefaultTypeInternal _StablePBMeta_default_instance_;
}  // namespace braft
namespace braft {

// ===================================================================

class ConfigurationPBMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:braft.ConfigurationPBMeta) */ {
 public:
  ConfigurationPBMeta();
  virtual ~ConfigurationPBMeta();

  ConfigurationPBMeta(const ConfigurationPBMeta& from);

  inline ConfigurationPBMeta& operator=(const ConfigurationPBMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigurationPBMeta(ConfigurationPBMeta&& from) noexcept
    : ConfigurationPBMeta() {
    *this = ::std::move(from);
  }

  inline ConfigurationPBMeta& operator=(ConfigurationPBMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigurationPBMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigurationPBMeta* internal_default_instance() {
    return reinterpret_cast<const ConfigurationPBMeta*>(
               &_ConfigurationPBMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ConfigurationPBMeta* other);
  friend void swap(ConfigurationPBMeta& a, ConfigurationPBMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigurationPBMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigurationPBMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigurationPBMeta& from);
  void MergeFrom(const ConfigurationPBMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigurationPBMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string peers = 1;
  int peers_size() const;
  void clear_peers();
  static const int kPeersFieldNumber = 1;
  const ::std::string& peers(int index) const;
  ::std::string* mutable_peers(int index);
  void set_peers(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_peers(int index, ::std::string&& value);
  #endif
  void set_peers(int index, const char* value);
  void set_peers(int index, const char* value, size_t size);
  ::std::string* add_peers();
  void add_peers(const ::std::string& value);
  #if LANG_CXX11
  void add_peers(::std::string&& value);
  #endif
  void add_peers(const char* value);
  void add_peers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& peers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_peers();

  // repeated string old_peers = 2;
  int old_peers_size() const;
  void clear_old_peers();
  static const int kOldPeersFieldNumber = 2;
  const ::std::string& old_peers(int index) const;
  ::std::string* mutable_old_peers(int index);
  void set_old_peers(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_old_peers(int index, ::std::string&& value);
  #endif
  void set_old_peers(int index, const char* value);
  void set_old_peers(int index, const char* value, size_t size);
  ::std::string* add_old_peers();
  void add_old_peers(const ::std::string& value);
  #if LANG_CXX11
  void add_old_peers(::std::string&& value);
  #endif
  void add_old_peers(const char* value);
  void add_old_peers(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& old_peers() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_old_peers();

  // @@protoc_insertion_point(class_scope:braft.ConfigurationPBMeta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> peers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> old_peers_;
  friend struct ::protobuf_braft_2flocal_5fstorage_2eproto::TableStruct;
  friend void ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsConfigurationPBMetaImpl();
};
// -------------------------------------------------------------------

class LogPBMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:braft.LogPBMeta) */ {
 public:
  LogPBMeta();
  virtual ~LogPBMeta();

  LogPBMeta(const LogPBMeta& from);

  inline LogPBMeta& operator=(const LogPBMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogPBMeta(LogPBMeta&& from) noexcept
    : LogPBMeta() {
    *this = ::std::move(from);
  }

  inline LogPBMeta& operator=(LogPBMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogPBMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogPBMeta* internal_default_instance() {
    return reinterpret_cast<const LogPBMeta*>(
               &_LogPBMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LogPBMeta* other);
  friend void swap(LogPBMeta& a, LogPBMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogPBMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  LogPBMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogPBMeta& from);
  void MergeFrom(const LogPBMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogPBMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 first_log_index = 1;
  bool has_first_log_index() const;
  void clear_first_log_index();
  static const int kFirstLogIndexFieldNumber = 1;
  ::google::protobuf::int64 first_log_index() const;
  void set_first_log_index(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:braft.LogPBMeta)
 private:
  void set_has_first_log_index();
  void clear_has_first_log_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 first_log_index_;
  friend struct ::protobuf_braft_2flocal_5fstorage_2eproto::TableStruct;
  friend void ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLogPBMetaImpl();
};
// -------------------------------------------------------------------

class StablePBMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:braft.StablePBMeta) */ {
 public:
  StablePBMeta();
  virtual ~StablePBMeta();

  StablePBMeta(const StablePBMeta& from);

  inline StablePBMeta& operator=(const StablePBMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StablePBMeta(StablePBMeta&& from) noexcept
    : StablePBMeta() {
    *this = ::std::move(from);
  }

  inline StablePBMeta& operator=(StablePBMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StablePBMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StablePBMeta* internal_default_instance() {
    return reinterpret_cast<const StablePBMeta*>(
               &_StablePBMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(StablePBMeta* other);
  friend void swap(StablePBMeta& a, StablePBMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StablePBMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  StablePBMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StablePBMeta& from);
  void MergeFrom(const StablePBMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StablePBMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string votedfor = 2;
  bool has_votedfor() const;
  void clear_votedfor();
  static const int kVotedforFieldNumber = 2;
  const ::std::string& votedfor() const;
  void set_votedfor(const ::std::string& value);
  #if LANG_CXX11
  void set_votedfor(::std::string&& value);
  #endif
  void set_votedfor(const char* value);
  void set_votedfor(const char* value, size_t size);
  ::std::string* mutable_votedfor();
  ::std::string* release_votedfor();
  void set_allocated_votedfor(::std::string* votedfor);

  // required int64 term = 1;
  bool has_term() const;
  void clear_term();
  static const int kTermFieldNumber = 1;
  ::google::protobuf::int64 term() const;
  void set_term(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:braft.StablePBMeta)
 private:
  void set_has_term();
  void clear_has_term();
  void set_has_votedfor();
  void clear_has_votedfor();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr votedfor_;
  ::google::protobuf::int64 term_;
  friend struct ::protobuf_braft_2flocal_5fstorage_2eproto::TableStruct;
  friend void ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsStablePBMetaImpl();
};
// -------------------------------------------------------------------

class LocalSnapshotPbMeta_File : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:braft.LocalSnapshotPbMeta.File) */ {
 public:
  LocalSnapshotPbMeta_File();
  virtual ~LocalSnapshotPbMeta_File();

  LocalSnapshotPbMeta_File(const LocalSnapshotPbMeta_File& from);

  inline LocalSnapshotPbMeta_File& operator=(const LocalSnapshotPbMeta_File& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalSnapshotPbMeta_File(LocalSnapshotPbMeta_File&& from) noexcept
    : LocalSnapshotPbMeta_File() {
    *this = ::std::move(from);
  }

  inline LocalSnapshotPbMeta_File& operator=(LocalSnapshotPbMeta_File&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalSnapshotPbMeta_File& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalSnapshotPbMeta_File* internal_default_instance() {
    return reinterpret_cast<const LocalSnapshotPbMeta_File*>(
               &_LocalSnapshotPbMeta_File_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LocalSnapshotPbMeta_File* other);
  friend void swap(LocalSnapshotPbMeta_File& a, LocalSnapshotPbMeta_File& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalSnapshotPbMeta_File* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalSnapshotPbMeta_File* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalSnapshotPbMeta_File& from);
  void MergeFrom(const LocalSnapshotPbMeta_File& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalSnapshotPbMeta_File* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .braft.LocalFileMeta meta = 2;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 2;
  const ::braft::LocalFileMeta& meta() const;
  ::braft::LocalFileMeta* release_meta();
  ::braft::LocalFileMeta* mutable_meta();
  void set_allocated_meta(::braft::LocalFileMeta* meta);

  // @@protoc_insertion_point(class_scope:braft.LocalSnapshotPbMeta.File)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_meta();
  void clear_has_meta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::braft::LocalFileMeta* meta_;
  friend struct ::protobuf_braft_2flocal_5fstorage_2eproto::TableStruct;
  friend void ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLocalSnapshotPbMeta_FileImpl();
};
// -------------------------------------------------------------------

class LocalSnapshotPbMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:braft.LocalSnapshotPbMeta) */ {
 public:
  LocalSnapshotPbMeta();
  virtual ~LocalSnapshotPbMeta();

  LocalSnapshotPbMeta(const LocalSnapshotPbMeta& from);

  inline LocalSnapshotPbMeta& operator=(const LocalSnapshotPbMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalSnapshotPbMeta(LocalSnapshotPbMeta&& from) noexcept
    : LocalSnapshotPbMeta() {
    *this = ::std::move(from);
  }

  inline LocalSnapshotPbMeta& operator=(LocalSnapshotPbMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalSnapshotPbMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalSnapshotPbMeta* internal_default_instance() {
    return reinterpret_cast<const LocalSnapshotPbMeta*>(
               &_LocalSnapshotPbMeta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LocalSnapshotPbMeta* other);
  friend void swap(LocalSnapshotPbMeta& a, LocalSnapshotPbMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalSnapshotPbMeta* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalSnapshotPbMeta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalSnapshotPbMeta& from);
  void MergeFrom(const LocalSnapshotPbMeta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalSnapshotPbMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LocalSnapshotPbMeta_File File;

  // accessors -------------------------------------------------------

  // repeated .braft.LocalSnapshotPbMeta.File files = 2;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 2;
  const ::braft::LocalSnapshotPbMeta_File& files(int index) const;
  ::braft::LocalSnapshotPbMeta_File* mutable_files(int index);
  ::braft::LocalSnapshotPbMeta_File* add_files();
  ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File >*
      mutable_files();
  const ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File >&
      files() const;

  // optional .braft.SnapshotMeta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  const ::braft::SnapshotMeta& meta() const;
  ::braft::SnapshotMeta* release_meta();
  ::braft::SnapshotMeta* mutable_meta();
  void set_allocated_meta(::braft::SnapshotMeta* meta);

  // @@protoc_insertion_point(class_scope:braft.LocalSnapshotPbMeta)
 private:
  void set_has_meta();
  void clear_has_meta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File > files_;
  ::braft::SnapshotMeta* meta_;
  friend struct ::protobuf_braft_2flocal_5fstorage_2eproto::TableStruct;
  friend void ::protobuf_braft_2flocal_5fstorage_2eproto::InitDefaultsLocalSnapshotPbMetaImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConfigurationPBMeta

// repeated string peers = 1;
inline int ConfigurationPBMeta::peers_size() const {
  return peers_.size();
}
inline void ConfigurationPBMeta::clear_peers() {
  peers_.Clear();
}
inline const ::std::string& ConfigurationPBMeta::peers(int index) const {
  // @@protoc_insertion_point(field_get:braft.ConfigurationPBMeta.peers)
  return peers_.Get(index);
}
inline ::std::string* ConfigurationPBMeta::mutable_peers(int index) {
  // @@protoc_insertion_point(field_mutable:braft.ConfigurationPBMeta.peers)
  return peers_.Mutable(index);
}
inline void ConfigurationPBMeta::set_peers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:braft.ConfigurationPBMeta.peers)
  peers_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ConfigurationPBMeta::set_peers(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:braft.ConfigurationPBMeta.peers)
  peers_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ConfigurationPBMeta::set_peers(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  peers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:braft.ConfigurationPBMeta.peers)
}
inline void ConfigurationPBMeta::set_peers(int index, const char* value, size_t size) {
  peers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:braft.ConfigurationPBMeta.peers)
}
inline ::std::string* ConfigurationPBMeta::add_peers() {
  // @@protoc_insertion_point(field_add_mutable:braft.ConfigurationPBMeta.peers)
  return peers_.Add();
}
inline void ConfigurationPBMeta::add_peers(const ::std::string& value) {
  peers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:braft.ConfigurationPBMeta.peers)
}
#if LANG_CXX11
inline void ConfigurationPBMeta::add_peers(::std::string&& value) {
  peers_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:braft.ConfigurationPBMeta.peers)
}
#endif
inline void ConfigurationPBMeta::add_peers(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  peers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:braft.ConfigurationPBMeta.peers)
}
inline void ConfigurationPBMeta::add_peers(const char* value, size_t size) {
  peers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:braft.ConfigurationPBMeta.peers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigurationPBMeta::peers() const {
  // @@protoc_insertion_point(field_list:braft.ConfigurationPBMeta.peers)
  return peers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigurationPBMeta::mutable_peers() {
  // @@protoc_insertion_point(field_mutable_list:braft.ConfigurationPBMeta.peers)
  return &peers_;
}

// repeated string old_peers = 2;
inline int ConfigurationPBMeta::old_peers_size() const {
  return old_peers_.size();
}
inline void ConfigurationPBMeta::clear_old_peers() {
  old_peers_.Clear();
}
inline const ::std::string& ConfigurationPBMeta::old_peers(int index) const {
  // @@protoc_insertion_point(field_get:braft.ConfigurationPBMeta.old_peers)
  return old_peers_.Get(index);
}
inline ::std::string* ConfigurationPBMeta::mutable_old_peers(int index) {
  // @@protoc_insertion_point(field_mutable:braft.ConfigurationPBMeta.old_peers)
  return old_peers_.Mutable(index);
}
inline void ConfigurationPBMeta::set_old_peers(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:braft.ConfigurationPBMeta.old_peers)
  old_peers_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ConfigurationPBMeta::set_old_peers(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:braft.ConfigurationPBMeta.old_peers)
  old_peers_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ConfigurationPBMeta::set_old_peers(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  old_peers_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:braft.ConfigurationPBMeta.old_peers)
}
inline void ConfigurationPBMeta::set_old_peers(int index, const char* value, size_t size) {
  old_peers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:braft.ConfigurationPBMeta.old_peers)
}
inline ::std::string* ConfigurationPBMeta::add_old_peers() {
  // @@protoc_insertion_point(field_add_mutable:braft.ConfigurationPBMeta.old_peers)
  return old_peers_.Add();
}
inline void ConfigurationPBMeta::add_old_peers(const ::std::string& value) {
  old_peers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:braft.ConfigurationPBMeta.old_peers)
}
#if LANG_CXX11
inline void ConfigurationPBMeta::add_old_peers(::std::string&& value) {
  old_peers_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:braft.ConfigurationPBMeta.old_peers)
}
#endif
inline void ConfigurationPBMeta::add_old_peers(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  old_peers_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:braft.ConfigurationPBMeta.old_peers)
}
inline void ConfigurationPBMeta::add_old_peers(const char* value, size_t size) {
  old_peers_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:braft.ConfigurationPBMeta.old_peers)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigurationPBMeta::old_peers() const {
  // @@protoc_insertion_point(field_list:braft.ConfigurationPBMeta.old_peers)
  return old_peers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigurationPBMeta::mutable_old_peers() {
  // @@protoc_insertion_point(field_mutable_list:braft.ConfigurationPBMeta.old_peers)
  return &old_peers_;
}

// -------------------------------------------------------------------

// LogPBMeta

// required int64 first_log_index = 1;
inline bool LogPBMeta::has_first_log_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogPBMeta::set_has_first_log_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogPBMeta::clear_has_first_log_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogPBMeta::clear_first_log_index() {
  first_log_index_ = GOOGLE_LONGLONG(0);
  clear_has_first_log_index();
}
inline ::google::protobuf::int64 LogPBMeta::first_log_index() const {
  // @@protoc_insertion_point(field_get:braft.LogPBMeta.first_log_index)
  return first_log_index_;
}
inline void LogPBMeta::set_first_log_index(::google::protobuf::int64 value) {
  set_has_first_log_index();
  first_log_index_ = value;
  // @@protoc_insertion_point(field_set:braft.LogPBMeta.first_log_index)
}

// -------------------------------------------------------------------

// StablePBMeta

// required int64 term = 1;
inline bool StablePBMeta::has_term() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StablePBMeta::set_has_term() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StablePBMeta::clear_has_term() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StablePBMeta::clear_term() {
  term_ = GOOGLE_LONGLONG(0);
  clear_has_term();
}
inline ::google::protobuf::int64 StablePBMeta::term() const {
  // @@protoc_insertion_point(field_get:braft.StablePBMeta.term)
  return term_;
}
inline void StablePBMeta::set_term(::google::protobuf::int64 value) {
  set_has_term();
  term_ = value;
  // @@protoc_insertion_point(field_set:braft.StablePBMeta.term)
}

// required string votedfor = 2;
inline bool StablePBMeta::has_votedfor() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StablePBMeta::set_has_votedfor() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StablePBMeta::clear_has_votedfor() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StablePBMeta::clear_votedfor() {
  votedfor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_votedfor();
}
inline const ::std::string& StablePBMeta::votedfor() const {
  // @@protoc_insertion_point(field_get:braft.StablePBMeta.votedfor)
  return votedfor_.GetNoArena();
}
inline void StablePBMeta::set_votedfor(const ::std::string& value) {
  set_has_votedfor();
  votedfor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:braft.StablePBMeta.votedfor)
}
#if LANG_CXX11
inline void StablePBMeta::set_votedfor(::std::string&& value) {
  set_has_votedfor();
  votedfor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:braft.StablePBMeta.votedfor)
}
#endif
inline void StablePBMeta::set_votedfor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_votedfor();
  votedfor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:braft.StablePBMeta.votedfor)
}
inline void StablePBMeta::set_votedfor(const char* value, size_t size) {
  set_has_votedfor();
  votedfor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:braft.StablePBMeta.votedfor)
}
inline ::std::string* StablePBMeta::mutable_votedfor() {
  set_has_votedfor();
  // @@protoc_insertion_point(field_mutable:braft.StablePBMeta.votedfor)
  return votedfor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* StablePBMeta::release_votedfor() {
  // @@protoc_insertion_point(field_release:braft.StablePBMeta.votedfor)
  clear_has_votedfor();
  return votedfor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void StablePBMeta::set_allocated_votedfor(::std::string* votedfor) {
  if (votedfor != NULL) {
    set_has_votedfor();
  } else {
    clear_has_votedfor();
  }
  votedfor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), votedfor);
  // @@protoc_insertion_point(field_set_allocated:braft.StablePBMeta.votedfor)
}

// -------------------------------------------------------------------

// LocalSnapshotPbMeta_File

// required string name = 1;
inline bool LocalSnapshotPbMeta_File::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocalSnapshotPbMeta_File::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocalSnapshotPbMeta_File::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LocalSnapshotPbMeta_File::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LocalSnapshotPbMeta_File::name() const {
  // @@protoc_insertion_point(field_get:braft.LocalSnapshotPbMeta.File.name)
  return name_.GetNoArena();
}
inline void LocalSnapshotPbMeta_File::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:braft.LocalSnapshotPbMeta.File.name)
}
#if LANG_CXX11
inline void LocalSnapshotPbMeta_File::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:braft.LocalSnapshotPbMeta.File.name)
}
#endif
inline void LocalSnapshotPbMeta_File::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:braft.LocalSnapshotPbMeta.File.name)
}
inline void LocalSnapshotPbMeta_File::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:braft.LocalSnapshotPbMeta.File.name)
}
inline ::std::string* LocalSnapshotPbMeta_File::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:braft.LocalSnapshotPbMeta.File.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalSnapshotPbMeta_File::release_name() {
  // @@protoc_insertion_point(field_release:braft.LocalSnapshotPbMeta.File.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalSnapshotPbMeta_File::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:braft.LocalSnapshotPbMeta.File.name)
}

// optional .braft.LocalFileMeta meta = 2;
inline bool LocalSnapshotPbMeta_File::has_meta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LocalSnapshotPbMeta_File::set_has_meta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LocalSnapshotPbMeta_File::clear_has_meta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::braft::LocalFileMeta& LocalSnapshotPbMeta_File::meta() const {
  const ::braft::LocalFileMeta* p = meta_;
  // @@protoc_insertion_point(field_get:braft.LocalSnapshotPbMeta.File.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::braft::LocalFileMeta*>(
      &::braft::_LocalFileMeta_default_instance_);
}
inline ::braft::LocalFileMeta* LocalSnapshotPbMeta_File::release_meta() {
  // @@protoc_insertion_point(field_release:braft.LocalSnapshotPbMeta.File.meta)
  clear_has_meta();
  ::braft::LocalFileMeta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::braft::LocalFileMeta* LocalSnapshotPbMeta_File::mutable_meta() {
  set_has_meta();
  if (meta_ == NULL) {
    meta_ = new ::braft::LocalFileMeta;
  }
  // @@protoc_insertion_point(field_mutable:braft.LocalSnapshotPbMeta.File.meta)
  return meta_;
}
inline void LocalSnapshotPbMeta_File::set_allocated_meta(::braft::LocalFileMeta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    set_has_meta();
  } else {
    clear_has_meta();
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:braft.LocalSnapshotPbMeta.File.meta)
}

// -------------------------------------------------------------------

// LocalSnapshotPbMeta

// optional .braft.SnapshotMeta meta = 1;
inline bool LocalSnapshotPbMeta::has_meta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LocalSnapshotPbMeta::set_has_meta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LocalSnapshotPbMeta::clear_has_meta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::braft::SnapshotMeta& LocalSnapshotPbMeta::meta() const {
  const ::braft::SnapshotMeta* p = meta_;
  // @@protoc_insertion_point(field_get:braft.LocalSnapshotPbMeta.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::braft::SnapshotMeta*>(
      &::braft::_SnapshotMeta_default_instance_);
}
inline ::braft::SnapshotMeta* LocalSnapshotPbMeta::release_meta() {
  // @@protoc_insertion_point(field_release:braft.LocalSnapshotPbMeta.meta)
  clear_has_meta();
  ::braft::SnapshotMeta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::braft::SnapshotMeta* LocalSnapshotPbMeta::mutable_meta() {
  set_has_meta();
  if (meta_ == NULL) {
    meta_ = new ::braft::SnapshotMeta;
  }
  // @@protoc_insertion_point(field_mutable:braft.LocalSnapshotPbMeta.meta)
  return meta_;
}
inline void LocalSnapshotPbMeta::set_allocated_meta(::braft::SnapshotMeta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(meta_);
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    set_has_meta();
  } else {
    clear_has_meta();
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:braft.LocalSnapshotPbMeta.meta)
}

// repeated .braft.LocalSnapshotPbMeta.File files = 2;
inline int LocalSnapshotPbMeta::files_size() const {
  return files_.size();
}
inline void LocalSnapshotPbMeta::clear_files() {
  files_.Clear();
}
inline const ::braft::LocalSnapshotPbMeta_File& LocalSnapshotPbMeta::files(int index) const {
  // @@protoc_insertion_point(field_get:braft.LocalSnapshotPbMeta.files)
  return files_.Get(index);
}
inline ::braft::LocalSnapshotPbMeta_File* LocalSnapshotPbMeta::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:braft.LocalSnapshotPbMeta.files)
  return files_.Mutable(index);
}
inline ::braft::LocalSnapshotPbMeta_File* LocalSnapshotPbMeta::add_files() {
  // @@protoc_insertion_point(field_add:braft.LocalSnapshotPbMeta.files)
  return files_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File >*
LocalSnapshotPbMeta::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:braft.LocalSnapshotPbMeta.files)
  return &files_;
}
inline const ::google::protobuf::RepeatedPtrField< ::braft::LocalSnapshotPbMeta_File >&
LocalSnapshotPbMeta::files() const {
  // @@protoc_insertion_point(field_list:braft.LocalSnapshotPbMeta.files)
  return files_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace braft

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_braft_2flocal_5fstorage_2eproto__INCLUDED
