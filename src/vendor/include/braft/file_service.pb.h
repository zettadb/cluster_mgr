// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: braft/file_service.proto

#ifndef PROTOBUF_braft_2ffile_5fservice_2eproto__INCLUDED
#define PROTOBUF_braft_2ffile_5fservice_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_braft_2ffile_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGetFileRequestImpl();
void InitDefaultsGetFileRequest();
void InitDefaultsGetFileResponseImpl();
void InitDefaultsGetFileResponse();
inline void InitDefaults() {
  InitDefaultsGetFileRequest();
  InitDefaultsGetFileResponse();
}
}  // namespace protobuf_braft_2ffile_5fservice_2eproto
namespace braft {
class GetFileRequest;
class GetFileRequestDefaultTypeInternal;
extern GetFileRequestDefaultTypeInternal _GetFileRequest_default_instance_;
class GetFileResponse;
class GetFileResponseDefaultTypeInternal;
extern GetFileResponseDefaultTypeInternal _GetFileResponse_default_instance_;
}  // namespace braft
namespace braft {

// ===================================================================

class GetFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:braft.GetFileRequest) */ {
 public:
  GetFileRequest();
  virtual ~GetFileRequest();

  GetFileRequest(const GetFileRequest& from);

  inline GetFileRequest& operator=(const GetFileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFileRequest(GetFileRequest&& from) noexcept
    : GetFileRequest() {
    *this = ::std::move(from);
  }

  inline GetFileRequest& operator=(GetFileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFileRequest* internal_default_instance() {
    return reinterpret_cast<const GetFileRequest*>(
               &_GetFileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetFileRequest* other);
  friend void swap(GetFileRequest& a, GetFileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFileRequest& from);
  void MergeFrom(const GetFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string filename = 2;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 2;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // required int64 reader_id = 1;
  bool has_reader_id() const;
  void clear_reader_id();
  static const int kReaderIdFieldNumber = 1;
  ::google::protobuf::int64 reader_id() const;
  void set_reader_id(::google::protobuf::int64 value);

  // required int64 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // required int64 offset = 4;
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 4;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // optional bool read_partly = 5;
  bool has_read_partly() const;
  void clear_read_partly();
  static const int kReadPartlyFieldNumber = 5;
  bool read_partly() const;
  void set_read_partly(bool value);

  // @@protoc_insertion_point(class_scope:braft.GetFileRequest)
 private:
  void set_has_reader_id();
  void clear_has_reader_id();
  void set_has_filename();
  void clear_has_filename();
  void set_has_count();
  void clear_has_count();
  void set_has_offset();
  void clear_has_offset();
  void set_has_read_partly();
  void clear_has_read_partly();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::int64 reader_id_;
  ::google::protobuf::int64 count_;
  ::google::protobuf::int64 offset_;
  bool read_partly_;
  friend struct ::protobuf_braft_2ffile_5fservice_2eproto::TableStruct;
  friend void ::protobuf_braft_2ffile_5fservice_2eproto::InitDefaultsGetFileRequestImpl();
};
// -------------------------------------------------------------------

class GetFileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:braft.GetFileResponse) */ {
 public:
  GetFileResponse();
  virtual ~GetFileResponse();

  GetFileResponse(const GetFileResponse& from);

  inline GetFileResponse& operator=(const GetFileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetFileResponse(GetFileResponse&& from) noexcept
    : GetFileResponse() {
    *this = ::std::move(from);
  }

  inline GetFileResponse& operator=(GetFileResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetFileResponse* internal_default_instance() {
    return reinterpret_cast<const GetFileResponse*>(
               &_GetFileResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GetFileResponse* other);
  friend void swap(GetFileResponse& a, GetFileResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetFileResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFileResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFileResponse& from);
  void MergeFrom(const GetFileResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 read_size = 2;
  bool has_read_size() const;
  void clear_read_size();
  static const int kReadSizeFieldNumber = 2;
  ::google::protobuf::int64 read_size() const;
  void set_read_size(::google::protobuf::int64 value);

  // required bool eof = 1;
  bool has_eof() const;
  void clear_eof();
  static const int kEofFieldNumber = 1;
  bool eof() const;
  void set_eof(bool value);

  // @@protoc_insertion_point(class_scope:braft.GetFileResponse)
 private:
  void set_has_eof();
  void clear_has_eof();
  void set_has_read_size();
  void clear_has_read_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 read_size_;
  bool eof_;
  friend struct ::protobuf_braft_2ffile_5fservice_2eproto::TableStruct;
  friend void ::protobuf_braft_2ffile_5fservice_2eproto::InitDefaultsGetFileResponseImpl();
};
// ===================================================================

class FileService_Stub;

class FileService : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline FileService() {};
 public:
  virtual ~FileService();

  typedef FileService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void get_file(::google::protobuf::RpcController* controller,
                       const ::braft::GetFileRequest* request,
                       ::braft::GetFileResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FileService);
};

class FileService_Stub : public FileService {
 public:
  FileService_Stub(::google::protobuf::RpcChannel* channel);
  FileService_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~FileService_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements FileService ------------------------------------------

  void get_file(::google::protobuf::RpcController* controller,
                       const ::braft::GetFileRequest* request,
                       ::braft::GetFileResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FileService_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GetFileRequest

// required int64 reader_id = 1;
inline bool GetFileRequest::has_reader_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFileRequest::set_has_reader_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFileRequest::clear_has_reader_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFileRequest::clear_reader_id() {
  reader_id_ = GOOGLE_LONGLONG(0);
  clear_has_reader_id();
}
inline ::google::protobuf::int64 GetFileRequest::reader_id() const {
  // @@protoc_insertion_point(field_get:braft.GetFileRequest.reader_id)
  return reader_id_;
}
inline void GetFileRequest::set_reader_id(::google::protobuf::int64 value) {
  set_has_reader_id();
  reader_id_ = value;
  // @@protoc_insertion_point(field_set:braft.GetFileRequest.reader_id)
}

// required string filename = 2;
inline bool GetFileRequest::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFileRequest::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFileRequest::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFileRequest::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& GetFileRequest::filename() const {
  // @@protoc_insertion_point(field_get:braft.GetFileRequest.filename)
  return filename_.GetNoArena();
}
inline void GetFileRequest::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:braft.GetFileRequest.filename)
}
#if LANG_CXX11
inline void GetFileRequest::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:braft.GetFileRequest.filename)
}
#endif
inline void GetFileRequest::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:braft.GetFileRequest.filename)
}
inline void GetFileRequest::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:braft.GetFileRequest.filename)
}
inline ::std::string* GetFileRequest::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:braft.GetFileRequest.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetFileRequest::release_filename() {
  // @@protoc_insertion_point(field_release:braft.GetFileRequest.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetFileRequest::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:braft.GetFileRequest.filename)
}

// required int64 count = 3;
inline bool GetFileRequest::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetFileRequest::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetFileRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetFileRequest::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::int64 GetFileRequest::count() const {
  // @@protoc_insertion_point(field_get:braft.GetFileRequest.count)
  return count_;
}
inline void GetFileRequest::set_count(::google::protobuf::int64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:braft.GetFileRequest.count)
}

// required int64 offset = 4;
inline bool GetFileRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetFileRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetFileRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetFileRequest::clear_offset() {
  offset_ = GOOGLE_LONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::int64 GetFileRequest::offset() const {
  // @@protoc_insertion_point(field_get:braft.GetFileRequest.offset)
  return offset_;
}
inline void GetFileRequest::set_offset(::google::protobuf::int64 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:braft.GetFileRequest.offset)
}

// optional bool read_partly = 5;
inline bool GetFileRequest::has_read_partly() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetFileRequest::set_has_read_partly() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetFileRequest::clear_has_read_partly() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetFileRequest::clear_read_partly() {
  read_partly_ = false;
  clear_has_read_partly();
}
inline bool GetFileRequest::read_partly() const {
  // @@protoc_insertion_point(field_get:braft.GetFileRequest.read_partly)
  return read_partly_;
}
inline void GetFileRequest::set_read_partly(bool value) {
  set_has_read_partly();
  read_partly_ = value;
  // @@protoc_insertion_point(field_set:braft.GetFileRequest.read_partly)
}

// -------------------------------------------------------------------

// GetFileResponse

// required bool eof = 1;
inline bool GetFileResponse::has_eof() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFileResponse::set_has_eof() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFileResponse::clear_has_eof() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFileResponse::clear_eof() {
  eof_ = false;
  clear_has_eof();
}
inline bool GetFileResponse::eof() const {
  // @@protoc_insertion_point(field_get:braft.GetFileResponse.eof)
  return eof_;
}
inline void GetFileResponse::set_eof(bool value) {
  set_has_eof();
  eof_ = value;
  // @@protoc_insertion_point(field_set:braft.GetFileResponse.eof)
}

// optional int64 read_size = 2;
inline bool GetFileResponse::has_read_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFileResponse::set_has_read_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFileResponse::clear_has_read_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFileResponse::clear_read_size() {
  read_size_ = GOOGLE_LONGLONG(0);
  clear_has_read_size();
}
inline ::google::protobuf::int64 GetFileResponse::read_size() const {
  // @@protoc_insertion_point(field_get:braft.GetFileResponse.read_size)
  return read_size_;
}
inline void GetFileResponse::set_read_size(::google::protobuf::int64 value) {
  set_has_read_size();
  read_size_ = value;
  // @@protoc_insertion_point(field_set:braft.GetFileResponse.read_size)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace braft

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_braft_2ffile_5fservice_2eproto__INCLUDED
